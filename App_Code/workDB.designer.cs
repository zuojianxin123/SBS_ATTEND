#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WorkFlow")]
public partial class workDBDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void Insertworkhistory(workhistory instance);
  partial void Updateworkhistory(workhistory instance);
  partial void Deleteworkhistory(workhistory instance);
  partial void Insertworker(worker instance);
  partial void Updateworker(worker instance);
  partial void Deleteworker(worker instance);
  #endregion
	
	public workDBDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WorkFlowConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public workDBDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public workDBDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public workDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public workDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<workhistory> workhistory
	{
		get
		{
			return this.GetTable<workhistory>();
		}
	}
	
	public System.Data.Linq.Table<worker> worker
	{
		get
		{
			return this.GetTable<worker>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.workhistory")]
public partial class workhistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _worker;
	
	private string _worker1;
	
	private System.Nullable<System.DateTime> _worktime;
	
	private string _workcontent;
	
	private string _workcontent1;
	
	private string _workstatus;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnworkerChanging(string value);
    partial void OnworkerChanged();
    partial void Onworker1Changing(string value);
    partial void Onworker1Changed();
    partial void OnworktimeChanging(System.Nullable<System.DateTime> value);
    partial void OnworktimeChanged();
    partial void OnworkcontentChanging(string value);
    partial void OnworkcontentChanged();
    partial void Onworkcontent1Changing(string value);
    partial void Onworkcontent1Changed();
    partial void OnworkstatusChanging(string value);
    partial void OnworkstatusChanged();
    #endregion
	
	public workhistory()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_worker", DbType="VarChar(20)")]
	public string worker
	{
		get
		{
			return this._worker;
		}
		set
		{
			if ((this._worker != value))
			{
				this.OnworkerChanging(value);
				this.SendPropertyChanging();
				this._worker = value;
				this.SendPropertyChanged("worker");
				this.OnworkerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_worker1", DbType="VarChar(20)")]
	public string worker1
	{
		get
		{
			return this._worker1;
		}
		set
		{
			if ((this._worker1 != value))
			{
				this.Onworker1Changing(value);
				this.SendPropertyChanging();
				this._worker1 = value;
				this.SendPropertyChanged("worker1");
				this.Onworker1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_worktime", DbType="DateTime")]
	public System.Nullable<System.DateTime> worktime
	{
		get
		{
			return this._worktime;
		}
		set
		{
			if ((this._worktime != value))
			{
				this.OnworktimeChanging(value);
				this.SendPropertyChanging();
				this._worktime = value;
				this.SendPropertyChanged("worktime");
				this.OnworktimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workcontent", DbType="NVarChar(MAX)")]
	public string workcontent
	{
		get
		{
			return this._workcontent;
		}
		set
		{
			if ((this._workcontent != value))
			{
				this.OnworkcontentChanging(value);
				this.SendPropertyChanging();
				this._workcontent = value;
				this.SendPropertyChanged("workcontent");
				this.OnworkcontentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workcontent1", DbType="NVarChar(MAX)")]
	public string workcontent1
	{
		get
		{
			return this._workcontent1;
		}
		set
		{
			if ((this._workcontent1 != value))
			{
				this.Onworkcontent1Changing(value);
				this.SendPropertyChanging();
				this._workcontent1 = value;
				this.SendPropertyChanged("workcontent1");
				this.Onworkcontent1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workstatus", DbType="VarChar(1)")]
	public string workstatus
	{
		get
		{
			return this._workstatus;
		}
		set
		{
			if ((this._workstatus != value))
			{
				this.OnworkstatusChanging(value);
				this.SendPropertyChanging();
				this._workstatus = value;
				this.SendPropertyChanged("workstatus");
				this.OnworkstatusChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.worker")]
public partial class worker : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _username;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    #endregion
	
	public worker()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(20)")]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
